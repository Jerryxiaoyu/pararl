// Generated by gencpp from file msgs/HomeAndLimit.msg
// DO NOT EDIT!


#ifndef MSGS_MESSAGE_HOMEANDLIMIT_H
#define MSGS_MESSAGE_HOMEANDLIMIT_H

#include <ros/service_traits.h>


#include <msgs/HomeAndLimitRequest.h>
#include <msgs/HomeAndLimitResponse.h>


namespace msgs
{

struct HomeAndLimit
{

typedef HomeAndLimitRequest Request;
typedef HomeAndLimitResponse Response;
Request request;
Response response;

typedef Request RequestType;
typedef Response ResponseType;

}; // struct HomeAndLimit
} // namespace msgs


namespace ros
{
namespace service_traits
{


template<>
struct MD5Sum< ::msgs::HomeAndLimit > {
  static const char* value()
  {
    return "37986a4fb94d2bd1e620d61c5fcb7476";
  }

  static const char* value(const ::msgs::HomeAndLimit&) { return value(); }
};

template<>
struct DataType< ::msgs::HomeAndLimit > {
  static const char* value()
  {
    return "msgs/HomeAndLimit";
  }

  static const char* value(const ::msgs::HomeAndLimit&) { return value(); }
};


// service_traits::MD5Sum< ::msgs::HomeAndLimitRequest> should match 
// service_traits::MD5Sum< ::msgs::HomeAndLimit > 
template<>
struct MD5Sum< ::msgs::HomeAndLimitRequest>
{
  static const char* value()
  {
    return MD5Sum< ::msgs::HomeAndLimit >::value();
  }
  static const char* value(const ::msgs::HomeAndLimitRequest&)
  {
    return value();
  }
};

// service_traits::DataType< ::msgs::HomeAndLimitRequest> should match 
// service_traits::DataType< ::msgs::HomeAndLimit > 
template<>
struct DataType< ::msgs::HomeAndLimitRequest>
{
  static const char* value()
  {
    return DataType< ::msgs::HomeAndLimit >::value();
  }
  static const char* value(const ::msgs::HomeAndLimitRequest&)
  {
    return value();
  }
};

// service_traits::MD5Sum< ::msgs::HomeAndLimitResponse> should match 
// service_traits::MD5Sum< ::msgs::HomeAndLimit > 
template<>
struct MD5Sum< ::msgs::HomeAndLimitResponse>
{
  static const char* value()
  {
    return MD5Sum< ::msgs::HomeAndLimit >::value();
  }
  static const char* value(const ::msgs::HomeAndLimitResponse&)
  {
    return value();
  }
};

// service_traits::DataType< ::msgs::HomeAndLimitResponse> should match 
// service_traits::DataType< ::msgs::HomeAndLimit > 
template<>
struct DataType< ::msgs::HomeAndLimitResponse>
{
  static const char* value()
  {
    return DataType< ::msgs::HomeAndLimit >::value();
  }
  static const char* value(const ::msgs::HomeAndLimitResponse&)
  {
    return value();
  }
};

} // namespace service_traits
} // namespace ros

#endif // MSGS_MESSAGE_HOMEANDLIMIT_H
